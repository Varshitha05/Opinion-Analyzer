# -*- coding: utf-8 -*-
"""zero_shot_classification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pIjSPiAiusG8CXpXHC5tdJeSqK1GcbOk
"""

import pandas as pd
from transformers import pipeline

# Load your dataset
tweets_df = pd.read_csv('/content/2016_US_election_tweets_100k (1).csv')

tweets_df.shape

tweets_df.head()



# Initialize the zero-shot classification pipeline
classifier = pipeline("zero-shot-classification", model="facebook/bart-large-mnli")

# Define the sentiment classes
classes = ['positive', 'negative', 'neutral']

# Function to classify a batch of tweets
def classify_batch(tweets):
    return classifier(tweets, candidate_labels=classes, hypothesis_template="This text expresses {} sentiment.", multi_label=False)

# Define batch size
batch_size = 100  # Adjust batch size based on your system's capabilities

# Process in batches
results = []
for i in range(0, len(tweets_df), batch_size):
    batch = tweets_df['text'][i:i+batch_size].tolist()
    batch_results = classify_batch(batch)
    results.extend(batch_results)

# Extracting the most likely sentiment from the results
predicted_sentiments = [result['labels'][0] for result in results]

# Adding the predicted sentiments back to the DataFrame
tweets_df['sentiment'] = predicted_sentiments

# Output some of the results
print(tweets_df[['text', 'sentiment']].head())